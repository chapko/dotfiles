[core]
    editor = 'nvim'
    excludesfile = ~/.gitconfig.d/.gitignore
    pager = delta --features latte  # "[[ -n $TODO_CHECK_IF_INSIDE_NVIM ]] && delta --features latte || delta --features solarized"
    autocrlf = false

[init]
    defaultBranch = main

[branch]
    defaultName = main

[push]
    default = simple

[rerere]
    enabled = true

[merge]
    defaultToUpstream = true
    tool = nvimdiff
    conflictstyle = diff3

[mergetool]
    prompt = false
    keepBackup = false

[difftool]
    prompt = false

[apply]
    whitespace = warn

[commit]
    verbose = true

[interactive]
    diffFilter = delta --color-only

[delta]
    navigate = true
    light = true
    side-by-side = true
    true-color = always

[delta "latte"]
    minus-style = syntax "#f5e9e9"
    minus-emph-style = syntax "#f5cbcb"
    plus-style = syntax "#e1f5e7"
    plus-emph-style = syntax "#b1edc2"

[delta "solarized"]
    minus-style = syntax "#f5e9e9"
    minus-emph-style = syntax "#f5cbcb"
    plus-style = syntax "#e1f5e7"
    plus-emph-style = syntax "#b1edc2"

[color]
    diff = auto
    branch = auto
    interactive = auto
    showbranch = auto
    status = auto

[color "diff"]
    meta = reverse  # separate files more obviously

[diff]
    colorMoved = default

[gpg]
    program = gpg2

[alias]
    lgg = log --color --graph --pretty=format:'%C(green)[%G?]%Creset %Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    lgs = log --color --graph --pretty=format:'%Cred%h%Creset - %Cgreen[%G? %GS - %GK]%Creset %s' --abbrev-commit
    lg = lgg -20

    purr = pull --rebase
    ush = push  # gitp ush

    hash = rev-list --max-count=1

    ch = checkout

    c = commit
    ca = commit -a
    cm = commit -m
    cam = commit -am

    fixup = commit --amend --no-edit
    amend = commit --amend

    d = diff
    dl = show
    dc = diff --cached

    b = branch

    # last commit of each branch
    bl = for-each-ref --format='%(color:green)%(authorname) %(color:reset)[%(color:blue)%(refname:short)%(color:reset)] - %(color:reset)%(subject)' refs/heads
    blr = for-each-ref --format='%(color:green)%(authorname) %(color:reset)[%(color:blue)%(refname:short)%(color:reset)] - %(color:reset)%(subject)' refs/remotes/origin

    copyb = "!f(){ branch=$(git rev-parse --abbrev-ref HEAD) && echo $branch | tr -d '\n' | tr -d ' ' | xclip; };f"

    # new branch
    nb = "!f(){ git branch ${1} ${2} && git checkout ${1}; }; f"

    rmbranch = "!f(){ git branch -d ${1} && git push origin --delete ${1}; };f"

    s = status -sb

    ss = stash save
    sl = stash list
    sp = stash pop

    cf = clean -f

    bi = bisect
    good = bisect good
    bad = bisect bad

    dt = difftool
    mt = mergetool

    ignore = update-index --skip-worktree
    unignore = update-index --no-skip-worktree
    listignored = !git ls-files -v | grep ^[sS]

    gi = "!gi() { curl -sL https://www.toptal.com/developers/gitignore/api/$@ ;}; gi"
    count = !git shortlog -sn

[include]
    path = ~/.gitconfig.local

    # ~/.gitconfig.local
    # ---
    # [user]
    #     name = ...
    #     email = ...
    # [includeIf "gitdir:~/work"]
    #     path = ~/.gitconfig.d/work

    # ~/.gitconfig.d/work
    # ---
    # [user]
    #     singingKey = ...
    # [commit]
    #     gpgsign = true
